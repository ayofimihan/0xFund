{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Brokie",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funderToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x591e33f8cacfbe0be19724cde7779d116010233f1f2e33184f485092c216133d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "854019",
    "logsBloom": "0x
    "blockHash": "0x1b6e9003c9adfc2976ad56f8ee769f8ff8f0ce3b2ba857cd95627fb15fcb8ca2",
    "transactionHash": "0x591e33f8cacfbe0be19724cde7779d116010233f1f2e33184f485092c216133d",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "854019",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "64fa928813092933465b86bac94a18a4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Brokie\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funderToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"./PriceConverter.sol\\\";\\n//Get funds from users\\n//withdraw funds\\n//set a minimum funding value\\n\\n//custom errors are stated outside of the contracts\\nerror Brokie();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    //minimum ethUSD value that can be sent to the contract\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    //an array of all funders\\n    address[] public funders;\\n    //a mapping of all funder addresses to amount they funded.\\n    mapping(address => uint256) public funderToAmount;\\n    //use immutable on a constructor variable name that doesn't change.\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    //constructor to set the owner when deploying the contract. the \\\"i_\\\" shows immutability which is on the variable name during declaration.\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    //a modi fier that checks to make sure the person about to call a function is the owner of the contract\\n    modifier onlyOwner() {\\n        require(i_owner == msg.sender, \\\"you're not the owner dawg\\\");\\n        _;\\n    }\\n\\n    //function to fund the contract\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"get your money up\\\"\\n        );\\n        funders.push(msg.sender);\\n        funderToAmount[msg.sender] = msg.value;\\n    }\\n\\n    //function to withdraw from the contract only by the owner.\\n    function withdraw(address _to) public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            funderToAmount[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        //this line withdraws the funds to the _to address\\n        (bool success, ) = payable(_to).call{value: address(this).balance}(\\\"\\\");\\n        //revert is used here to save gas and error brokie is declared already outside of the contract\\n        if (!success) {\\n            revert Brokie();\\n        }\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xa580e282083f71b0a263ec9eb5692e21efb842f3d2907649f7caede976f9fdbf\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//the math here is weird even though i understand\\nlibrary PriceConverter {\\n    //get the price from the chainlink datafeed\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        //Eth in terms of USD\\n        // convert this price 3000.00000000 to msg.value(1^18)\\n        //also consider the decimal so multiply by 1e10\\n        //also wrap in uint256 to typecast price cos price is int and msg.value is uint\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        return\\n            AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e)\\n                .version();\\n\\n        //simplified this to that-->\\n        // AggregatorV3Interface aggversion = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        // return aggversion.version();\\n    }\\n}\\n\",\"keccak256\":\"0x1b3d362b3096cca9d86beab6d50879fb205e59143203a277186a9743e62d9240\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f76380380610f76833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610e116101656000396000818161031501526105720152610e116000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461011e578063b60d428814610149578063dba6335f14610153578063dc0d3dff1461017e57610083565b80634407e1e81461008d57806351cff8d9146100ca5780636b69a592146100f357610083565b36610083576100816101bb565b005b61008b6101bb565b005b34801561009957600080fd5b506100b460048036038101906100af91906107bf565b6102e4565b6040516100c191906109b5565b60405180910390f35b3480156100d657600080fd5b506100f160048036038101906100ec91906107bf565b6102fc565b005b3480156100ff57600080fd5b5061010861053d565b60405161011591906109b5565b60405180910390f35b34801561012a57600080fd5b5061013361054a565b604051610140919061095a565b60405180910390f35b6101516101bb565b005b34801561015f57600080fd5b50610168610570565b604051610175919061093f565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a091906107ec565b610594565b6040516101b2919061093f565b60405180910390f35b6802b5e3af16b18800006101fa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b101561023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610975565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610995565b60405180910390fd5b60005b6000805490508110156104355760008082815481106103af576103ae610cc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042d90610c20565b91505061038d565b50600067ffffffffffffffff81111561045157610450610cf6565b5b60405190808252806020026020018201604052801561047f5781602001602082028036833780820191505090505b50600090805190602001906104959291906106af565b5060008173ffffffffffffffffffffffffffffffffffffffff16476040516104bc9061092a565b60006040518083038185875af1925050503d80600081146104f9576040519150601f19603f3d011682016040523d82523d6000602084013e6104fe565b606091505b5050905080610539576040517f8c519b7700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000085836105f89190610b34565b61060291906109ec565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065857600080fd5b505afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190610819565b5050509150506402540be400816106a79190610a1d565b915050919050565b828054828255906000526020600020908101928215610728579160200282015b828111156107275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cf565b5b5090506107359190610739565b5090565b5b8082111561075257600081600090555060010161073a565b5090565b60008135905061076581610d7f565b92915050565b60008151905061077a81610d96565b92915050565b60008135905061078f81610dad565b92915050565b6000815190506107a481610dad565b92915050565b6000815190506107b981610dc4565b92915050565b6000602082840312156107d5576107d4610d25565b5b60006107e384828501610756565b91505092915050565b60006020828403121561080257610801610d25565b5b600061081084828501610780565b91505092915050565b600080600080600060a0868803121561083557610834610d25565b5b6000610843888289016107aa565b95505060206108548882890161076b565b945050604061086588828901610795565b935050606061087688828901610795565b9250506080610887888289016107aa565b9150509295509295909350565b61089d81610b8e565b82525050565b6108ac81610bea565b82525050565b60006108bf6011836109db565b91506108ca82610d2a565b602082019050919050565b60006108e26019836109db565b91506108ed82610d53565b602082019050919050565b60006109056000836109d0565b915061091082610d7c565b600082019050919050565b61092481610bca565b82525050565b6000610935826108f8565b9150819050919050565b60006020820190506109546000830184610894565b92915050565b600060208201905061096f60008301846108a3565b92915050565b6000602082019050818103600083015261098e816108b2565b9050919050565b600060208201905081810360008301526109ae816108d5565b9050919050565b60006020820190506109ca600083018461091b565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f782610bca565b9150610a0283610bca565b925082610a1257610a11610c98565b5b828204905092915050565b6000610a2882610ba0565b9150610a3383610ba0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a7257610a71610c69565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610aaf57610aae610c69565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610aec57610aeb610c69565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b2957610b28610c69565b5b828202905092915050565b6000610b3f82610bca565b9150610b4a83610bca565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b8357610b82610c69565b5b828202905092915050565b6000610b9982610baa565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610bf582610bfc565b9050919050565b6000610c0782610c0e565b9050919050565b6000610c1982610baa565b9050919050565b6000610c2b82610bca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5e57610c5d610c69565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f67657420796f7572206d6f6e6579207570000000000000000000000000000000600082015250565b7f796f75277265206e6f7420746865206f776e6572206461776700000000000000600082015250565b50565b610d8881610b8e565b8114610d9357600080fd5b50565b610d9f81610ba0565b8114610daa57600080fd5b50565b610db681610bca565b8114610dc157600080fd5b50565b610dcd81610bd4565b8114610dd857600080fd5b5056fea2646970667358221220e66788556f04eadf72cdc93110218fa648037384a12ad57987b8ec5df6edeed564736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461011e578063b60d428814610149578063dba6335f14610153578063dc0d3dff1461017e57610083565b80634407e1e81461008d57806351cff8d9146100ca5780636b69a592146100f357610083565b36610083576100816101bb565b005b61008b6101bb565b005b34801561009957600080fd5b506100b460048036038101906100af91906107bf565b6102e4565b6040516100c191906109b5565b60405180910390f35b3480156100d657600080fd5b506100f160048036038101906100ec91906107bf565b6102fc565b005b3480156100ff57600080fd5b5061010861053d565b60405161011591906109b5565b60405180910390f35b34801561012a57600080fd5b5061013361054a565b604051610140919061095a565b60405180910390f35b6101516101bb565b005b34801561015f57600080fd5b50610168610570565b604051610175919061093f565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a091906107ec565b610594565b6040516101b2919061093f565b60405180910390f35b6802b5e3af16b18800006101fa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b101561023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610975565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610995565b60405180910390fd5b60005b6000805490508110156104355760008082815481106103af576103ae610cc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042d90610c20565b91505061038d565b50600067ffffffffffffffff81111561045157610450610cf6565b5b60405190808252806020026020018201604052801561047f5781602001602082028036833780820191505090505b50600090805190602001906104959291906106af565b5060008173ffffffffffffffffffffffffffffffffffffffff16476040516104bc9061092a565b60006040518083038185875af1925050503d80600081146104f9576040519150601f19603f3d011682016040523d82523d6000602084013e6104fe565b606091505b5050905080610539576040517f8c519b7700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000085836105f89190610b34565b61060291906109ec565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065857600080fd5b505afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190610819565b5050509150506402540be400816106a79190610a1d565b915050919050565b828054828255906000526020600020908101928215610728579160200282015b828111156107275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cf565b5b5090506107359190610739565b5090565b5b8082111561075257600081600090555060010161073a565b5090565b60008135905061076581610d7f565b92915050565b60008151905061077a81610d96565b92915050565b60008135905061078f81610dad565b92915050565b6000815190506107a481610dad565b92915050565b6000815190506107b981610dc4565b92915050565b6000602082840312156107d5576107d4610d25565b5b60006107e384828501610756565b91505092915050565b60006020828403121561080257610801610d25565b5b600061081084828501610780565b91505092915050565b600080600080600060a0868803121561083557610834610d25565b5b6000610843888289016107aa565b95505060206108548882890161076b565b945050604061086588828901610795565b935050606061087688828901610795565b9250506080610887888289016107aa565b9150509295509295909350565b61089d81610b8e565b82525050565b6108ac81610bea565b82525050565b60006108bf6011836109db565b91506108ca82610d2a565b602082019050919050565b60006108e26019836109db565b91506108ed82610d53565b602082019050919050565b60006109056000836109d0565b915061091082610d7c565b600082019050919050565b61092481610bca565b82525050565b6000610935826108f8565b9150819050919050565b60006020820190506109546000830184610894565b92915050565b600060208201905061096f60008301846108a3565b92915050565b6000602082019050818103600083015261098e816108b2565b9050919050565b600060208201905081810360008301526109ae816108d5565b9050919050565b60006020820190506109ca600083018461091b565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f782610bca565b9150610a0283610bca565b925082610a1257610a11610c98565b5b828204905092915050565b6000610a2882610ba0565b9150610a3383610ba0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a7257610a71610c69565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610aaf57610aae610c69565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610aec57610aeb610c69565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b2957610b28610c69565b5b828202905092915050565b6000610b3f82610bca565b9150610b4a83610bca565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b8357610b82610c69565b5b828202905092915050565b6000610b9982610baa565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610bf582610bfc565b9050919050565b6000610c0782610c0e565b9050919050565b6000610c1982610baa565b9050919050565b6000610c2b82610bca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5e57610c5d610c69565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f67657420796f7572206d6f6e6579207570000000000000000000000000000000600082015250565b7f796f75277265206e6f7420746865206f776e6572206461776700000000000000600082015250565b50565b610d8881610b8e565b8114610d9357600080fd5b50565b610d9f81610ba0565b8114610daa57600080fd5b50565b610db681610bca565b8114610dc157600080fd5b50565b610dcd81610bd4565b8114610dd857600080fd5b5056fea2646970667358221220e66788556f04eadf72cdc93110218fa648037384a12ad57987b8ec5df6edeed564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 324,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 328,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funderToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 333,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}